fun f(x : Int) : Int = x

fun g(x : Int) : Int =
    f(x)

exec g(x = 3)

fun addOne(x : Int) : Int = wait x do {x + 1} end

fun addTwo(x : Int) : Int =
    addOne(addOne(x))

exec addTwo(x = 3)

fun addOneToAll(xs : Int*) : Int* =
    case xs of
      nil => nil
    | y::ys => addOne(y) :: addOneToAll(ys)

exec addOneToAll(xs = [])