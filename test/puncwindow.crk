fun tilFirstPunc[s](xs : (Eps + s)*) : s* . (Eps + s)* =
  case xs of
    nil => (nil;nil)
  | y::ys => case y of
               inl _ => (nil;ys)
             | inr s => let (cur;rest) = tilFirstPunc(ys) in
                        (s::cur;rest)

fun puncWindow[s](xs : (Eps + s)*) : s** =
  let (run;rest) = tilFirstPunc[s](xs) in
  run :: puncWindow(rest)

exec puncWindow[Int](xs = emp)
exec puncWindow[Int](xs = [inr(3)))
exec puncWindow[Int](xs = [inr(3);emp))
exec puncWindow[Int](xs = [inr(3);inr(4);inl(emp)))
exec puncWindow[Int](xs = [inl(emp);inr(5)))