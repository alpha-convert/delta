fun foo (u : Int ; v : Bool) : Int = u

fun bar (u : Int ; v : Bool) : Bool = v

fun baz (u : Int ; v : Bool) : Int . Bool = (u ; v)

fun qz (z : Int . Bool) : Int . Bool =
    let (x;y) = z in (x;y)

fun bot (x : Int + Bool ; y : Bool) : (Int . Bool) + (Bool . Bool) =
    case x of
      inl x' => inl (x' ; y)
    | inr x' => inr (x' ; y)
    
fun delaycase(y : Bool; x : Int + Bool) : (Bool . Int) + (Bool . Bool) =
  case x of
    inl x' => inl (y ; x')
  | inr x' => inr (y ; x')


fun bigctx (x : Bool; y : Bool; z : Bool) : Bool = z

specialize bot[]

exec bot (x = emp; y = emp)
exec bot (x = inl(emp); y = emp)
exec bot (x = inl(3); y = emp)
exec bot (x = inl(3); y = false)

specialize delaycase[]

exec delaycase (y=emp;x=emp)
exec delaycase (y=false;x=emp)
exec delaycase (y=false;x=inl(emp))
exec delaycase (y=false;x=inl(3))
